generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  username      String    @unique
  passwordHash  String
  role          Role      @default(USER)
  balance       Float     @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relations
  sentTransfers     Transfer[] @relation("SentTransfers")
  receivedTransfers Transfer[] @relation("ReceivedTransfers")
  gameHistory       GameHistory[]
  createdBy        String?   // ID of admin/agent who created this user
}

model Transfer {
  id          String   @id @default(cuid())
  amount      Float
  fromUserId  String
  toUserId    String
  type        String   // e.g., "deposit", "withdrawal", "transfer"
  status      String   // e.g., "pending", "completed", "failed"
  note        String?
  createdAt   DateTime @default(now())
  
  // Relations
  fromUser    User     @relation("SentTransfers", fields: [fromUserId], references: [id])
  toUser      User     @relation("ReceivedTransfers", fields: [toUserId], references: [id])
}

model GameHistory {
  id          String   @id @default(cuid())
  userId      String
  gameType    String   // e.g., "blackjack", "noufi", "slots"
  bet         Float
  outcome     String   // e.g., "win", "lose", "push"
  winAmount   Float?
  createdAt   DateTime @default(now())
  
  // Relations
  user        User     @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  AGENT
  USER
}
